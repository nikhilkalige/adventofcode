#![feature(prelude_import)]
#[prelude_import]
use std::prelude::v1::*;
#[macro_use]
extern crate std;
extern crate advent_of_code_2020;
extern crate aoc_runner;
extern crate aoc_runner_derive;
use aoc_runner_derive::aoc_main;
fn main() {
    use advent_of_code_2020::__aoc::*;
    use aoc_runner::{Generator, Runner};
    use std::marker::PhantomData;
    use std::time::{Duration, Instant};
    let input_day1 = None;
    let input_day2 = None;
    let input_day3 = None;
    let input_day4 = None;
    let input_day5 = None;
    let input_day6 = None;
    let input_day7 = None;
    let input_day8 = None;
    let input_day9 = None;
    let input_day10 = None;
    let input_day11 = None;
    let input_day12 = None;
    let input_day13 = None;
    let input_day14 = None;
    let input_day15 = None;
    let input_day16 = None;
    let input_day17 = None;
    let input_day18 = None;
    let input_day19 = None;
    let input_day20 = None;
    let input_day21 = None;
    let input_day22 = None;
    let input_day23 = None;
    let input_day24 = None;
    let input_day25 = None;
    {
        ::std::io::_print(::core::fmt::Arguments::new_v1(
            &["Advent of code ", "\n"],
            &match (&YEAR,) {
                (arg0,) => [::core::fmt::ArgumentV1::new(
                    arg0,
                    ::core::fmt::Display::fmt,
                )],
            },
        ));
    };
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day1 {
            let start_time = Instant::now();
            let generator = &Day1Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day1Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 1 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 1 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day2 {
            let start_time = Instant::now();
            let generator = &Day2Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day2Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 2 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 2 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day3 {
            let start_time = Instant::now();
            let generator = &Day3Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day3Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 3 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 3 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day4 {
            let start_time = Instant::now();
            let generator = &Day4Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day4Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 4 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 4 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day5 {
            let start_time = Instant::now();
            let generator = &Day5Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day5Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 5 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 5 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day6 {
            let start_time = Instant::now();
            let generator = &Day6Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day6Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 6 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 6 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day7 {
            let start_time = Instant::now();
            let generator = &Day7Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day7Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 7 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 7 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day8 {
            let start_time = Instant::now();
            let generator = &Day8Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day8Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 8 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 8 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day9 {
            let start_time = Instant::now();
            let generator = &Day9Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day9Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 9 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 9 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day10 {
            let start_time = Instant::now();
            let generator = &Day10Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day10Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 10 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 10 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day11 {
            let start_time = Instant::now();
            let generator = &Day11Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day11Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 11 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 11 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day12 {
            let start_time = Instant::now();
            let generator = &Day12Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day12Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 12 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 12 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day13 {
            let start_time = Instant::now();
            let generator = &Day13Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day13Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 13 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 13 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day14 {
            let start_time = Instant::now();
            let generator = &Day14Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day14Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 14 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 14 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day15 {
            let start_time = Instant::now();
            let generator = &Day15Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day15Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 15 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 15 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day16 {
            let start_time = Instant::now();
            let generator = &Day16Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day16Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 16 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 16 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day17 {
            let start_time = Instant::now();
            let generator = &Day17Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day17Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 17 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 17 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day18 {
            let start_time = Instant::now();
            let generator = &Day18Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day18Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 18 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 18 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day19 {
            let start_time = Instant::now();
            let generator = &Day19Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day19Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 19 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 19 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day20 {
            let start_time = Instant::now();
            let generator = &Day20Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day20Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 20 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 20 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day21 {
            let start_time = Instant::now();
            let generator = &Day21Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day21Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 21 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 21 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day22 {
            let start_time = Instant::now();
            let generator = &Day22Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day22Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 22 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 22 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day23 {
            let start_time = Instant::now();
            let generator = &Day23Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day23Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 23 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 23 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day24 {
            let start_time = Instant::now();
            let generator = &Day24Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day24Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 24 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 24 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part1Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part1Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part1Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part1Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part1Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part1Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part1Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part1Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part1Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part1Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 1: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 1: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part2Alt0Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part2Alt0Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part2Alt1Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part2Alt1Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part2Alt2Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part2Alt2Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part2Alt3Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part2Alt3Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
    {
        if let Some(input) = input_day25 {
            let start_time = Instant::now();
            let generator = &Day25Part2Alt4Generator;
            match generator.generate(input) {
                Ok(parsed_input) => {
                    let runner = &Day25Part2Alt4Runner(PhantomData);
                    if runner.is_implemented() {
                        let inter_time = Instant::now();
                        match runner.run(&parsed_input) {
                            Ok(result) => {
                                let final_time = Instant::now();
                                {
                                    ::std::io::_print(::core::fmt::Arguments::new_v1(
                                        &[
                                            "Day 25 - Part 2: ",
                                            "\n\tgenerator: ",
                                            ",\n\trunner: ",
                                            "\n\n",
                                        ],
                                        &match (
                                            &result,
                                            &(inter_time - start_time),
                                            &(final_time - inter_time),
                                        ) {
                                            (arg0, arg1, arg2) => [
                                                ::core::fmt::ArgumentV1::new(
                                                    arg0,
                                                    ::core::fmt::Display::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg1,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                                ::core::fmt::ArgumentV1::new(
                                                    arg2,
                                                    ::core::fmt::Debug::fmt,
                                                ),
                                            ],
                                        },
                                    ));
                                };
                            }
                            Err(e) => {
                                ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                                    &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                                    &match (&"running", &e) {
                                        (arg0, arg1) => [
                                            ::core::fmt::ArgumentV1::new(
                                                arg0,
                                                ::core::fmt::Display::fmt,
                                            ),
                                            ::core::fmt::ArgumentV1::new(
                                                arg1,
                                                ::core::fmt::Debug::fmt,
                                            ),
                                        ],
                                    },
                                ));
                            }
                        }
                    }
                }
                Err(e) => {
                    ::std::io::_eprint(::core::fmt::Arguments::new_v1(
                        &["Day 25 - Part 2: FAILED while ", ":\n", "\n\n"],
                        &match (&"generating", &e) {
                            (arg0, arg1) => [
                                ::core::fmt::ArgumentV1::new(arg0, ::core::fmt::Display::fmt),
                                ::core::fmt::ArgumentV1::new(arg1, ::core::fmt::Debug::fmt),
                            ],
                        },
                    ));
                }
            }
        }
    }
}
